#!/usr/bin/env python
# s3-mv
import argparse
import os
import subprocess
import sys

parser = argparse.ArgumentParser(description='Moves a local file or S3 object to another location locally or in S3.')
parser.add_argument('source', help='the source (LocalPath or S3Uri)')
parser.add_argument('destination', help='the destination (LocalPath or S3Uri)')
args = parser.parse_args()

COMMAND=["aws", "s3", "mv", args.source, args.destination]

if os.getenv("RD_CONFIG_QUIET") == "true":
	COMMAND.append("--quiet")
if os.getenv("RD_CONFIG_RECURSIVE") == "true":
	COMMAND.append("--recursive")
if os.getenv("RD_CONFIG_DRYRUN") == "true":
	COMMAND.append("--dryrun")
if os.getenv("RD_CONFIG_DELETE") == "true":
	COMMAND.append("--delete")	
if "RD_CONFIG_INCLUDE" in os.environ:
    COMMAND.append("--include")
    COMMAND.append(os.getenv("RD_CONFIG_INCLUDE"))
if "RD_CONFIG_EXCLUDE" in os.environ:
    COMMAND.append("--exclude")
    COMMAND.append(os.getenv("RD_CONFIG_EXCLUDE"))


if "RD_CONFIG_ACCESS_KEY" in os.environ:
    os.environ["AWS_ACCESS_KEY_ID"] = os.environ["RD_CONFIG_ACCESS_KEY"]
if "RD_CONFIG_SECRET_ACCESS_KEY" in os.environ:
	os.environ["AWS_SECRET_ACCESS_KEY"] = os.environ["RD_CONFIG_SECRET_ACCESS_KEY"]
if "RD_CONFIG_DEFAULT_REGION" in os.environ:
	os.environ["AWS_DEFAULT_REGION"] = os.environ["RD_CONFIG_DEFAULT_REGION"]

#print >>sys.stdout, "debug: COMMAND: ", COMMAND

try:
    retcode = subprocess.call(COMMAND)
    sys.exit(retcode)
except OSError as e:
    print >>sys.stderr, "Command error:", e
    sys.exit(1)
# Done